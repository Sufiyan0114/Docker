version: "3.8"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend   # âœ… Simple dependency (healthcheck condition v3.8 me support nahi)

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/tasks"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest   
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini 
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dashboard.json
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app-network
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro,rslave

networks:
  app-network:
    driver: bridge